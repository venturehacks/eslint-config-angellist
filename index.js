module.exports = {
  extends: [
    'airbnb-base',
    'plugin:compat/recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:prettier/recommended',
    'prettier/@typescript-eslint',
    'prettier/react',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 2018,
    sourceType: 'module',
  },
  plugins: [
    'sort-keys-fix',
    'import',
    'jest',
    'typescript-sort-keys',
    '@typescript-eslint',
    '@typescript-eslint/tslint',
    'react',
  ],
  env: {
    browser: true,
    es6: true,
    node: true,
    'jest/globals': true,
  },
  globals: {
    Atomics: 'readonly',
    SharedArrayBuffer: 'readonly',
  },

  rules: {
    'prettier/prettier': 'off', // prettier is expensive, so we don't run it as part of eslint
    '@typescript-eslint/adjacent-overload-signatures': 'error',
    '@typescript-eslint/array-type': 'error',
    '@typescript-eslint/ban-types': 'error',
    '@typescript-eslint/class-name-casing': 'error',
    '@typescript-eslint/explicit-member-accessibility': 'off',
    camelcase: 'off',
    '@typescript-eslint/camelcase': 'off',
    // '@typescript-eslint/camelcase': ['error', {
    //   'properties': 'never',
    //   'allow': ['^UNSAFE_']
    // }],
    '@typescript-eslint/indent': 'off',
    '@typescript-eslint/interface-name-prefix': 'error',
    '@typescript-eslint/member-delimiter-style': 'off',
    '@typescript-eslint/no-empty-interface': 'error',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-misused-new': 'error',
    '@typescript-eslint/no-namespace': [
      'error',
      {
        allowDeclarations: true,
      },
    ],
    '@typescript-eslint/no-parameter-properties': 'off',
    '@typescript-eslint/no-this-alias': 'error',
    '@typescript-eslint/no-use-before-declare': 'off',
    '@typescript-eslint/no-var-requires': 'error',
    '@typescript-eslint/prefer-for-of': 'error',
    '@typescript-eslint/prefer-function-type': 'error',
    '@typescript-eslint/prefer-namespace-keyword': 'error',
    '@typescript-eslint/type-annotation-spacing': 'off',
    '@typescript-eslint/unified-signatures': 'error',
    '@typescript-eslint/explicit-function-return-type': 'off',
    // "react/jsx-handler-names": ['error', {
    //   "eventHandlerPrefix": '(handle|submit|select)',
    //   "eventHandlerPropPrefix": 'on',
    // }],
    'react/jsx-filename-extension': [
      'error',
      {
        extensions: ['.tsx', '.jsx'],
      },
    ],
    'react/jsx-sort-props': [
      'error',
      {
        ignoreCase: true,
        shorthandLast: true,
        reservedFirst: true,
      },
    ],
    'react/jsx-uses-vars': 'error',
    'react/jsx-fragments': ['error', 'syntax'],
    'react/sort-comp': [
      'error',
      {
        order: [
          'static-variables',
          'static-methods',
          'instance-variables',
          'lifecycle',
          'everything-else',
          '/^on.+$/',
          'render',
        ],
        groups: {
          lifecycle: [
            'displayName',
            'propTypes',
            'contextTypes',
            'childContextTypes',
            'mixins',
            'statics',
            'defaultProps',
            'state',
            'constructor',
            'getDefaultProps',
            'getInitialState',
            'getChildContext',
            'getDerivedStateFromProps',
            'componentWillMount',
            'UNSAFE_componentWillMount',
            'componentDidMount',
            'componentWillReceiveProps',
            'UNSAFE_componentWillReceiveProps',
            'shouldComponentUpdate',
            'componentWillUpdate',
            'UNSAFE_componentWillUpdate',
            'getSnapshotBeforeUpdate',
            'componentDidUpdate',
            'componentDidCatch',
            'componentWillUnmount',
          ],
        },
      },
    ],
    'react/prop-types': 'off',
    '@typescript-eslint/no-unused-vars': [
      'error',
      {
        ignoreRestSiblings: true,
        argsIgnorePattern: '^_',
        varsIgnorePattern: '(React|T$)',
      },
    ],
    '@typescript-eslint/no-use-before-define': [
      'error',
      {
        functions: false,
        classes: true,
        variables: false,
        typedefs: false,
      },
    ],
    '@typescript-eslint/no-non-null-assertion': 'off',
    '@typescript-eslint/ban-ts-ignore': 'off',
    'typescript-sort-keys/interface': [
      'error',
      'asc',
      {
        caseSensitive: false,
      },
    ],
    'typescript-sort-keys/string-enum': [
      'error',
      'asc',
      {
        caseSensitive: false,
      },
    ],
    'jsx-a11y/no-autofocus': 'off',
    'import/no-cycle': 'off',
    'import/no-unresolved': 'off',
    'import/named': 'off',
    'import/namespace': 'off',
    'import/prefer-default-export': 'off',
    'import/no-extraneous-dependencies': [
      'error',
      {
        devDependencies: ['**/*.test.*', '**/lib/testing/**/*'],
      },
    ],
    'arrow-body-style': 'off',
    'arrow-parens': ['off', 'as-needed'],
    'class-methods-use-this': [
      'error',
      {
        exceptMethods: ['render', 'componentDidMount'],
      },
    ],
    complexity: 'off',
    'constructor-super': 'error',
    'consistent-return': 'off',
    curly: 'error',
    'default-case': 'off',
    'dot-notation': 'error',
    'eol-last': 'off',
    'guard-for-in': 'error',
    'func-names': 'off',
    'linebreak-style': 'off',
    'lines-between-class-members': [
      'error',
      'always',
      {
        exceptAfterSingleLine: true,
      },
    ],
    'max-classes-per-file': ['error', 1],
    'new-parens': 'off',
    'newline-per-chained-call': 'off',
    'no-alert': 'off',
    'no-bitwise': 'error',
    'no-caller': 'error',
    'no-cond-assign': 'error',
    'no-console': ['error', {
      allow: ['warn', 'error']
    }],
    'no-debugger': 'error',
    'no-duplicate-case': 'error',
    'no-empty': 'error',
    'no-else-return': [
      'error',
      {
        allowElseIf: true,
      },
    ],
    'no-extra-bind': 'error',
    'no-extra-semi': 'off',
    'no-fallthrough': 'off',
    'no-plusplus': 'off',
    'no-invalid-this': 'off',
    'no-irregular-whitespace': 'off',
    'no-multiple-empty-lines': 'off',
    'no-new-func': 'error',
    'no-new-wrappers': 'error',
    'no-param-reassign': 'off',
    'no-return-await': 'error',
    'no-return-assign': ['error', 'except-parens'],
    'no-sequences': 'error',
    'no-sparse-arrays': 'error',
    'no-template-curly-in-string': 'error',
    'no-throw-literal': 'error',
    'no-undef-init': 'error',
    'no-unsafe-finally': 'error',
    'no-unused-labels': 'error',
    'no-unused-vars': 'off',
    'no-underscore-dangle': [
      'error',
      {
        allow: [
          '__typename',
          '__STATE__',
          '__init',
          '__schema',
          '_fs_init',
          '__SHA',
        ],
      },
    ],
    'no-use-before-define': [
      'error',
      {
        functions: false,
        classes: true,
        variables: false,
      },
    ],
    'no-var': 'error',
    'object-shorthand': 'error',
    'one-var': 'error',
    'prefer-const': 'error',
    'prefer-destructuring': [
      'error',
      {
        array: false,
        object: true,
      },
    ],
    'prefer-object-spread': 'error',
    'quote-props': 'off',
    'radix': 'error',
    'sort-keys': 'off',
    'sort-keys-fix/sort-keys-fix': 'warn',
    'sort-vars': 'error',
    'space-before-function-paren': 'off',
    'use-isnan': 'error',
    'valid-typeof': 'off',
    '@typescript-eslint/tslint/config': [
      'error',
      {
        rulesDirectory: ['./node_modules/tslint-react/rules'],
        rules: {
          'comment-format': [true, 'check-space'],
          'jsdoc-format': [true, 'check-multiline-start'],
          'jsx-key': true,
          'jsx-no-bind': true,
          'jsx-no-string-ref': true,
          'jsx-self-close': true,
          'no-duplicate-imports': true,
          'no-duplicate-variable': [true, 'check-parameters'],
          'no-implicit-dependencies': [true, 'dev', ['~']],
          'no-reference-import': true,
          'no-shadowed-variable': true,
          'no-submodule-imports': [true, '~', 'next', 'date-fns'],
          'no-unused-expression': true,
          'only-arrow-functions': [
            true,
            'allow-declarations',
            'allow-named-functions',
          ],
          'ordered-imports': [
            true,
            {
              'import-sources-order': 'lowercase-last',
              'grouped-imports': true,
              'named-imports-order': 'lowercase-last',
              'module-source-path': 'full',
            },
          ],
          'prefer-conditional-expression': true,
          quotemark: [true, 'single', 'avoid-escape', 'jsx-double'],
          'triple-equals': [true, 'allow-null-check'],
          'variable-name': [
            true,
            'ban-keywords',
            'check-format',
            'allow-leading-underscore',
            'allow-pascal-case',
          ],
        },
      },
    ],
  },
  settings: {
    'import/extensions': ['.js', '.jsx', '.ts', '.tsx'],
    'import/parsers': {
      '@typescript-eslint/parser': ['.ts', '.tsx'],
    },
    'import/resolver': {
      typescript: {},
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
    },
    react: {
      version: 'detect',
    }
  },
};
